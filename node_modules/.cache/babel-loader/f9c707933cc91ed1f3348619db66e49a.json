{"ast":null,"code":"var _jsxFileName = \"/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/components/UserList/index.js\";\nimport { useEffect, useState } from 'react';\nimport { prefix } from '../../globals';\nimport Button from '../Button';\nimport UserItem from '../UserItem';\nimport { ReactComponent as ReactAdd } from '@carbon/icons/svg/32/add.svg'; // import {ReactComponent as ReactFish} from '@carbon/icons/svg/32/fish--multiple.svg';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserList(_ref) {\n  let {\n    users,\n    sharedState,\n    switchPanel\n  } = _ref;\n  return !users.length ? emptyState() : /*#__PURE__*/_jsxDEV(\"article\", {\n    className: `${prefix}-user-list__container`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: `${prefix}-user-list__header`,\n      children: [addButton(), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${prefix}-user-list__label`,\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${prefix}-user-list__label`,\n        children: \"Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `${prefix}-user-list`,\n      children: users.sort(sortUsers).map((user, i) => /*#__PURE__*/_jsxDEV(UserItem, {\n        switchPanel: switchPanel,\n        index: i,\n        deleteUserFromState: () => sharedState.deleteUser(i),\n        ...user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n\n  function sortUsers(a, b) {\n    const aa = a.name.toUpperCase();\n    const bb = b.name.toUpperCase();\n\n    if (aa < bb) {\n      return -1;\n    }\n\n    if (aa > bb) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  function addButton() {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      size: \"lg\",\n      styleType: \"primary\",\n      className: `${prefix}-user-list__new`,\n      onClick: switchPanel,\n      children: [\"New \", /*#__PURE__*/_jsxDEV(ReactAdd, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n  function emptyState() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your user list is empty right now. Feel free to start adding users and before you know it they'll multiply.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: addButton()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/components/UserList/index.js"],"names":["useEffect","useState","prefix","Button","UserItem","ReactComponent","ReactAdd","UserList","users","sharedState","switchPanel","length","emptyState","addButton","sort","sortUsers","map","user","i","deleteUser","id","a","b","aa","name","toUpperCase","bb"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAAQC,cAAc,IAAIC,QAA1B,QAAyC,8BAAzC,C,CACA;;;;;AAEA,SAASC,QAAT,OAAwD;AAAA,MAArC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA;AAAtB,GAAqC;AACtD,SAAO,CAACF,KAAK,CAACG,MAAP,GAAgBC,UAAU,EAA1B,gBACL;AAAS,IAAA,SAAS,EAAG,GAAEV,MAAO,uBAA9B;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAG,GAAEA,MAAO,oBAA7B;AAAA,iBACGW,SAAS,EADZ,eAEE;AAAG,QAAA,SAAS,EAAG,GAAEX,MAAO,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,SAAS,EAAG,GAAEA,MAAO,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAI,MAAA,SAAS,EAAG,GAAEA,MAAO,YAAzB;AAAA,gBACGM,KAAK,CAACM,IAAN,CAAWC,SAAX,EAAsBC,GAAtB,CAA0B,CAACC,IAAD,EAAOC,CAAP,kBACvB,QAAC,QAAD;AACE,QAAA,WAAW,EAAER,WADf;AAGE,QAAA,KAAK,EAAEQ,CAHT;AAIE,QAAA,mBAAmB,EAAE,MAAMT,WAAW,CAACU,UAAZ,CAAuBD,CAAvB,CAJ7B;AAAA,WAKMD;AALN,SAEOA,IAAI,CAACG,EAFZ;AAAA;AAAA;AAAA;AAAA,cADH;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAqBA,WAASL,SAAT,CAAoBM,CAApB,EAAuBC,CAAvB,EAA0B;AACxB,UAAMC,EAAE,GAAGF,CAAC,CAACG,IAAF,CAAOC,WAAP,EAAX;AACA,UAAMC,EAAE,GAAGJ,CAAC,CAACE,IAAF,CAAOC,WAAP,EAAX;;AAEA,QAAIF,EAAE,GAAGG,EAAT,EAAa;AACX,aAAO,CAAC,CAAR;AACD;;AACD,QAAIH,EAAE,GAAGG,EAAT,EAAa;AACX,aAAO,CAAP;AACD;;AAED,WAAO,CAAP;AACD;;AAED,WAASb,SAAT,GAAsB;AACpB,wBACE,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,SAAS,EAAC,SAFZ;AAGE,MAAA,SAAS,EAAG,GAAEX,MAAO,iBAHvB;AAIE,MAAA,OAAO,EAAEQ,WAJX;AAAA,sCAMM,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cANN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAED,WAASE,UAAT,GAAuB;AACrB,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIC,SAAS;AAAb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD;AACF;;KAzDQN,Q;AA2DT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { prefix } from '../../globals';\nimport Button from '../Button';\nimport UserItem from '../UserItem';\nimport {ReactComponent as ReactAdd} from '@carbon/icons/svg/32/add.svg';\n// import {ReactComponent as ReactFish} from '@carbon/icons/svg/32/fish--multiple.svg';\n\nfunction UserList ({ users, sharedState, switchPanel }) {\n  return !users.length ? emptyState() : (\n    <article className={`${prefix}-user-list__container`}>\n      <header className={`${prefix}-user-list__header`}>\n        {addButton()}\n        <p className={`${prefix}-user-list__label`}>Name</p>\n        <p className={`${prefix}-user-list__label`}>Actions</p>\n      </header>\n      <ul className={`${prefix}-user-list`}>\n        {users.sort(sortUsers).map((user, i) =>\n            <UserItem\n              switchPanel={switchPanel}\n              key={user.id}\n              index={i}\n              deleteUserFromState={() => sharedState.deleteUser(i)}\n              {...user}\n            />\n          )}\n      </ul>\n    </article>\n  );\n\n  function sortUsers (a, b) {\n    const aa = a.name.toUpperCase();\n    const bb = b.name.toUpperCase();\n\n    if (aa < bb) {\n      return -1;\n    }\n    if (aa > bb) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  function addButton () {\n    return (\n      <Button\n        size=\"lg\"\n        styleType=\"primary\"\n        className={`${prefix}-user-list__new`}\n        onClick={switchPanel}\n      >\n        New <ReactAdd />\n      </Button>\n    );\n  }\n\n  function emptyState () {\n    return (\n      <>\n        <p>Your user list is empty right now. Feel free to start adding users and before you know it they'll multiply.</p>\n        <p>{addButton()}</p>\n      </>\n    );\n  }\n}\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}