{"ast":null,"code":"var _jsxFileName = \"/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/components/TextInput/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { prefix } from '../../globals';\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TextInput(_ref) {\n  _s();\n\n  let {\n    id,\n    label,\n    className,\n    onChange,\n    value = '',\n    ...props\n  } = _ref;\n  const [valueState, setValueState] = useState(value);\n  useEffect(() => {\n    setValueState(value);\n  }, [value]);\n\n  function handleChange(e) {\n    setValueState(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames(`${prefix}-text-input__group`, className),\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: `${prefix}-text-input__label`,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: id,\n      value: valueState,\n      onChange: e => {\n        handleChange(e);\n\n        if (typeof onChange === 'function') {\n          onChange(e);\n        }\n      },\n      className: classnames(`${prefix}-text-input`, classnames),\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextInput, \"qKI9PGerOWGVp8a5ASxUYkTIJXk=\");\n\n_c = TextInput;\nexport default TextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"sources":["/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/components/TextInput/index.js"],"names":["useEffect","useState","prefix","classnames","TextInput","id","label","className","onChange","value","props","valueState","setValueState","handleChange","e","target"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,SAASC,SAAT,OAA4E;AAAA;;AAAA,MAAxD;AAACC,IAAAA,EAAD;AAAKC,IAAAA,KAAL;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,QAAvB;AAAiCC,IAAAA,KAAK,GAAG,EAAzC;AAA6C,OAAGC;AAAhD,GAAwD;AAE1E,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAACQ,KAAD,CAA5C;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa,CAACH,KAAD,CAAb;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASI,YAAT,CAAuBC,CAAvB,EAA0B;AACxBF,IAAAA,aAAa,CAACE,CAAC,CAACC,MAAF,CAASN,KAAV,CAAb;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEN,UAAU,CAAE,GAAED,MAAO,oBAAX,EAAgCK,SAAhC,CAA1B;AAAA,eACGD,KAAK,iBAAI;AAAO,MAAA,OAAO,EAAED,EAAhB;AACR,MAAA,SAAS,EAAG,GAAEH,MAAO,oBADb;AAAA,gBAEPI;AAFO;AAAA;AAAA;AAAA;AAAA,YADZ,eAKE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAED,EAFN;AAGE,MAAA,KAAK,EAAEM,UAHT;AAIE,MAAA,QAAQ,EAAEG,CAAC,IAAI;AACbD,QAAAA,YAAY,CAACC,CAAD,CAAZ;;AACA,YAAI,OAAON,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,UAAAA,QAAQ,CAACM,CAAD,CAAR;AACD;AACF,OATH;AAUE,MAAA,SAAS,EAAEX,UAAU,CAAE,GAAED,MAAO,aAAX,EAAyBC,UAAzB,CAVvB;AAAA,SAUiEO;AAVjE;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAhCQN,S;;KAAAA,S;AAkCT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { prefix } from '../../globals';\nimport classnames from 'classnames';\n\nfunction TextInput ({id, label, className, onChange, value = '', ...props}) {\n\n  const [valueState, setValueState] = useState(value);\n\n  useEffect(() => {\n    setValueState(value);\n  }, [value]);\n\n  function handleChange (e) {\n    setValueState(e.target.value);\n  }\n\n  return (\n    <div className={classnames(`${prefix}-text-input__group`, className)}>\n      {label && <label htmlFor={id}\n        className={`${prefix}-text-input__label`}>\n        {label}\n      </label>}\n      <input\n        type=\"text\"\n        id={id}\n        value={valueState}\n        onChange={e => {\n          handleChange(e);\n          if (typeof onChange === 'function') {\n            onChange(e);\n          }\n        }}\n        className={classnames(`${prefix}-text-input`, classnames)} {...props}\n      />\n    </div>\n  );\n}\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}