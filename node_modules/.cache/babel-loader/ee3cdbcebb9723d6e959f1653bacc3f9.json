{"ast":null,"code":"var _jsxFileName = \"/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/components/UserForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { prefix } from '../../globals';\nimport getUser from '../../utilities/getUser';\nimport saveUser from '../../utilities/saveUser';\nimport validate from '../../utilities/validation';\nimport Button from '../Button';\nimport TextInput from '../TextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass User {\n  constructor() {\n    let user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let validate = arguments.length > 1 ? arguments[1] : undefined;\n    this.name = validate ? user.name : user.name || '';\n    this.email = validate ? user.email : user.email || '';\n    this.phone = validate ? user.phone : user.phone || '';\n\n    if (user.id) {\n      this.id = user.id;\n    }\n  }\n\n}\n\nfunction UserForm(_ref) {\n  _s();\n\n  let {\n    editUser,\n    sharedState,\n    switchPanel\n  } = _ref;\n  const [user, setUser] = useState(new User());\n  const [validationResults, setValidationResults] = useState(new User({}, true));\n  useEffect(() => {\n    if (editUser.id) {\n      getUser(editUser.id).then(d => setUser(new User(d)));\n    } else {\n      setUser(new User());\n    }\n  }, [editUser]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: `${prefix}-user-form`,\n    onSubmit: e => saveForm(e),\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      className: `${prefix}-user-form__input`,\n      id: \"name\",\n      label: \"Name\",\n      validate: getValidation(validationResults.name),\n      onChange: e => trackUserChanges(e, 'name'),\n      value: user.name || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      className: `${prefix}-user-form__input`,\n      id: \"email\",\n      label: \"Email\",\n      validate: getValidation(validationResults.email),\n      onChange: e => trackUserChanges(e, 'email'),\n      value: user.email || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      className: `${prefix}-user-form__input`,\n      id: \"phone\",\n      label: \"Phone\",\n      validate: getValidation(validationResults.phone),\n      onChange: e => trackUserChanges(e, 'phone'),\n      value: formatPhone(user.phone) || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: `${prefix}-user-form__input`,\n      id: \"id\",\n      value: user.id || '',\n      type: \"hidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${prefix}-user-form__actions`,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        styleType: \"primary\",\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        styleType: \"secondary\",\n        onClick: clearForm,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n\n  function trackUserChanges(e, prop) {\n    user[prop] = e.target.value.trim();\n    validationResults[prop] = validate[prop](user[prop]);\n    setUser(new User(user));\n    setValidationResults(new User(validationResults, true));\n    console.log(user);\n  }\n\n  function clearForm(e) {\n    switchPanel(e);\n    setUser(new User());\n  }\n\n  function saveForm(e) {\n    e.preventDefault();\n    saveUser(user).then(savedUser => {\n      switchPanel(e);\n      sharedState.saveUser(savedUser, editUser.index);\n    });\n  }\n\n  function formatPhone(value) {\n    // if (prop !== 'phone') { return false; }\n    let formattedPhone;\n    let str = e.target.value || '';\n    str = str.replace(/\\D/g, '');\n\n    if (str.length <= 7) {\n      formattedPhone = [str.slice(0, 3), str.slice(3, 7)];\n    } else {\n      formattedPhone = [str.slice(0, 3), str.slice(3, 6), str.slice(6, 9)];\n    }\n\n    return formattedPhone.filter(d => d.length).join('-'); // e.target.value = formattedPhone.filter(d => d.length).join('-');\n  }\n\n  function getValidation(result) {\n    if (result === false) {\n      return 'error';\n    } else if (result === true) {\n      return 'valid';\n    }\n\n    return '';\n  }\n}\n\n_s(UserForm, \"ZVSpCcljU1qSHhm9Tv61DKRmbMI=\");\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/components/UserForm/index.js"],"names":["useEffect","useState","prefix","getUser","saveUser","validate","Button","TextInput","User","constructor","user","name","email","phone","id","UserForm","editUser","sharedState","switchPanel","setUser","validationResults","setValidationResults","then","d","e","saveForm","getValidation","trackUserChanges","formatPhone","clearForm","prop","target","value","trim","console","log","preventDefault","savedUser","index","formattedPhone","str","replace","length","slice","filter","join","result"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { prefix } from '../../globals';\nimport getUser from '../../utilities/getUser';\nimport saveUser from '../../utilities/saveUser';\nimport validate from '../../utilities/validation';\nimport Button from '../Button';\nimport TextInput from '../TextInput';\n\nclass User {\n  constructor(user = {}, validate) {\n    this.name = validate ? user.name : user.name || '';\n    this.email = validate ? user.email : user.email || '';\n    this.phone = validate ? user.phone : user.phone || '';\n\n    if (user.id) {\n      this.id = user.id;\n    }\n  }\n}\n\nfunction UserForm ({ editUser, sharedState, switchPanel }) {\n  const [user, setUser] = useState(new User());\n  const [validationResults, setValidationResults] = useState(new User({}, true));\n\n  useEffect(() => {\n    if (editUser.id) {\n      getUser(editUser.id).then(d => setUser(new User(d)));\n    } else {\n      setUser(new User());\n    }\n  }, [editUser]);\n\n  return (\n    <form className={`${prefix}-user-form`} onSubmit={e => saveForm(e)}>\n      <TextInput\n        className={`${prefix}-user-form__input`}\n        id=\"name\"\n        label=\"Name\"\n        validate={getValidation(validationResults.name)}\n        onChange={e => trackUserChanges(e, 'name')}\n        value={user.name || ''} />\n      <TextInput\n        className={`${prefix}-user-form__input`}\n        id=\"email\"\n        label=\"Email\"\n        validate={getValidation(validationResults.email)}\n        onChange={e => trackUserChanges(e, 'email')}\n        value={user.email || ''} />\n      <TextInput\n        className={`${prefix}-user-form__input`}\n        id=\"phone\"\n        label=\"Phone\"\n        validate={getValidation(validationResults.phone)}\n        onChange={e => trackUserChanges(e, 'phone')}\n        value={formatPhone(user.phone) || ''} />\n      <input\n        className={`${prefix}-user-form__input`}\n        id=\"id\"\n        value={user.id || ''}\n        type=\"hidden\" />\n      <div className={`${prefix}-user-form__actions`}>\n        <Button size=\"lg\" styleType=\"primary\" type=\"submit\">Save</Button>\n        <Button size=\"lg\" styleType=\"secondary\" onClick={clearForm}>Cancel</Button>\n      </div>\n    </form>\n  );\n\n  function trackUserChanges (e, prop) {\n    user[prop] = e.target.value.trim();\n    validationResults[prop] = validate[prop](user[prop]);\n    setUser(new User(user));\n    setValidationResults(new User(validationResults, true));\n    console.log(user);\n  }\n\n  function clearForm (e) {\n    switchPanel(e);\n    setUser(new User());\n  }\n\n  function saveForm (e) {\n    e.preventDefault();\n    saveUser(user).then((savedUser) => {\n      switchPanel(e);\n      sharedState.saveUser(savedUser, editUser.index);\n    });\n  }\n\n  function formatPhone (value) {\n    // if (prop !== 'phone') { return false; }\n\n    let formattedPhone;\n    let str = e.target.value || '';\n    str = str.replace(/\\D/g, '');\n\n    if (str.length <= 7) {\n      formattedPhone = [str.slice(0,3), str.slice(3,7)];\n    } else {\n      formattedPhone = [str.slice(0,3), str.slice(3,6), str.slice(6,9)];\n    }\n\n    return formattedPhone.filter(d => d.length).join('-');\n\n    // e.target.value = formattedPhone.filter(d => d.length).join('-');\n  }\n\n  function getValidation (result) {\n    if (result === false) {\n      return 'error';\n    } else if (result === true) {\n      return 'valid';\n    }\n\n    return '';\n  }\n}\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}