{"ast":null,"code":"var _jsxFileName = \"/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { prefix } from './globals';\nimport classnames from 'classnames';\nimport getUsers from './utilities/getUsers';\nimport Popup from './components/Popup';\nimport UserList from './components/UserList';\nimport PanelSwitcher from './components/PanelSwitcher';\nimport Header from './components/Header';\nimport UserForm from './components/UserForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [autoOpen, setAutoOpen] = useState(false);\n  const [panel, setPanel] = useState(false);\n  const [activeUserId, setActiveUserId] = useState('');\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setAutoOpen(true);\n    }, 1500);\n  }, []);\n  useEffect(() => {\n    getUsers().then(d => setSortUsers(d));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"lw-main\",\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      open: autoOpen,\n      children: /*#__PURE__*/_jsxDEV(PanelSwitcher, {\n        aside: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            title: activeUserId ? 'Edit user' : 'Create user',\n            active: autoOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UserForm, {\n            userId: activeUserId,\n            handleUserState: handleUserState,\n            switchPanel: e => switchPanel('left', e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true),\n        activePanel: panel,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: \"User list\",\n          active: autoOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserList, {\n          users: users,\n          handleUserState: handleUserState,\n          switchPanel: e => switchPanel('right', e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n\n  function switchPanel(panelName, e) {\n    e.preventDefault();\n    setPanel(panelName);\n    setActiveUserId(e.target.dataset.userid);\n    return panel;\n  }\n\n  function sharedState() {\n    return {\n      addUser: user => {\n        users.push(user);\n        setUsers([...users]);\n      },\n      updateUser: (user, index) => {\n        users.splice(index, 1, user);\n        setUsers([...users]);\n      },\n      deleteUser: index => {\n        users.splice(index, 1);\n        setUsers([...users]);\n      }\n    };\n  }\n}\n\n_s(App, \"XThiSmoMFTBVKf89/MR6yEMu7Qo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/App.js"],"names":["useEffect","useState","prefix","classnames","getUsers","Popup","UserList","PanelSwitcher","Header","UserForm","App","autoOpen","setAutoOpen","panel","setPanel","activeUserId","setActiveUserId","users","setUsers","setTimeout","then","d","setSortUsers","handleUserState","e","switchPanel","panelName","preventDefault","target","dataset","userid","sharedState","addUser","user","push","updateUser","index","splice","deleteUser"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { prefix } from './globals';\nimport classnames from 'classnames';\nimport getUsers from './utilities/getUsers';\nimport Popup from './components/Popup';\nimport UserList from './components/UserList';\nimport PanelSwitcher from './components/PanelSwitcher';\nimport Header from './components/Header';\nimport UserForm from './components/UserForm';\n\nfunction App() {\n  const [autoOpen, setAutoOpen] = useState(false);\n  const [panel, setPanel] = useState(false);\n  const [activeUserId, setActiveUserId] = useState('');\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setAutoOpen(true);\n    }, 1500)\n  }, []);\n\n  useEffect(() => {\n    getUsers().then(d => setSortUsers(d));\n  }, []);\n\n  return (\n    <main className=\"lw-main\">\n      <Popup open={autoOpen}>\n        <PanelSwitcher\n          aside={\n            <>\n              <Header title={activeUserId ? 'Edit user' : 'Create user'} active={autoOpen} />\n              <UserForm\n                userId={activeUserId}\n                handleUserState={handleUserState}\n                switchPanel={e => switchPanel('left', e)}\n              />\n            </>\n          }\n          activePanel={panel}>\n          <Header title=\"User list\" active={autoOpen} />\n          <UserList\n            users={users}\n            handleUserState={handleUserState}\n            switchPanel={e => switchPanel('right', e)}\n          />\n        </PanelSwitcher>\n      </Popup>\n    </main>\n  );\n\n  function switchPanel (panelName, e) {\n    e.preventDefault();\n    setPanel(panelName);\n    setActiveUserId(e.target.dataset.userid);\n    return panel;\n  }\n\n  function sharedState () {\n    return {\n      addUser: (user) => {\n        users.push(user);\n        setUsers([...users]);\n      },\n      updateUser: (user, index) => {\n        users.splice(index, 1, user);\n        setUsers([...users]);\n      },\n      deleteUser: (index) => {\n        users.splice(index, 1);\n        setUsers([...users]);\n      }\n    }\n  }\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}