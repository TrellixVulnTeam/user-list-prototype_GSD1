{"ast":null,"code":"var _jsxFileName = \"/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { prefix } from './globals';\nimport classnames from 'classnames';\nimport getUsers from './utilities/getUsers';\nimport Popup from './components/Popup';\nimport UserList from './components/UserList';\nimport PanelSwitcher from './components/PanelSwitcher';\nimport Header from './components/Header';\nimport UserForm from './components/UserForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [autoOpen, setAutoOpen] = useState(false);\n  const [panel, setPanel] = useState(false);\n  const [activeUser, setActiveUser] = useState({});\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setAutoOpen(true);\n    }, 1500);\n  }, []);\n  useEffect(() => {\n    getUsers().then(d => setUsers(d));\n  }, []);\n  const sharedState = {\n    addUser: user => {\n      users.push(user);\n      setUsers([...users]);\n    },\n    updateUser: (user, index) => {\n      users.splice(index, 1, user);\n      setUsers([...users]);\n    },\n    deleteUser: index => {\n      users.splice(index, 1);\n      setUsers([...users]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"lw-main\",\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      open: autoOpen,\n      children: /*#__PURE__*/_jsxDEV(PanelSwitcher, {\n        aside: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            title: activeUser.id ? 'Edit user' : 'Create user',\n            active: autoOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UserForm, {\n            user: activeUser,\n            sharedState: sharedState,\n            switchPanel: e => switchPanel('left', e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true),\n        activePanel: panel,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: \"User list\",\n          active: autoOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserList, {\n          users: users,\n          sharedState: sharedState,\n          switchPanel: e => switchPanel('right', e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  function switchPanel(panelName, e) {\n    e.preventDefault();\n    setPanel(panelName);\n    setActiveUser({\n      id: e.target.dataset.userid,\n      index: e.target.dataset.index\n    });\n    return panel;\n  }\n}\n\n_s(App, \"kUWZkpVU4BeorGpz2XALhVLbki4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/App.js"],"names":["useEffect","useState","prefix","classnames","getUsers","Popup","UserList","PanelSwitcher","Header","UserForm","App","autoOpen","setAutoOpen","panel","setPanel","activeUser","setActiveUser","users","setUsers","setTimeout","then","d","sharedState","addUser","user","push","updateUser","index","splice","deleteUser","id","e","switchPanel","panelName","preventDefault","target","dataset","userid"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { prefix } from './globals';\nimport classnames from 'classnames';\nimport getUsers from './utilities/getUsers';\nimport Popup from './components/Popup';\nimport UserList from './components/UserList';\nimport PanelSwitcher from './components/PanelSwitcher';\nimport Header from './components/Header';\nimport UserForm from './components/UserForm';\n\nfunction App() {\n  const [autoOpen, setAutoOpen] = useState(false);\n  const [panel, setPanel] = useState(false);\n  const [activeUser, setActiveUser] = useState({});\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setAutoOpen(true);\n    }, 1500)\n  }, []);\n\n  useEffect(() => {\n    getUsers().then(d => setUsers(d));\n  }, []);\n\n\n  const sharedState = {\n    addUser: (user) => {\n      users.push(user);\n      setUsers([...users]);\n    },\n    updateUser: (user, index) => {\n      users.splice(index, 1, user);\n      setUsers([...users]);\n    },\n    deleteUser: (index) => {\n      users.splice(index, 1);\n      setUsers([...users]);\n    }\n  }\n\n  return (\n    <main className=\"lw-main\">\n      <Popup open={autoOpen}>\n        <PanelSwitcher\n          aside={\n            <>\n              <Header title={activeUser.id ? 'Edit user' : 'Create user'} active={autoOpen} />\n              <UserForm\n                user={activeUser}\n                sharedState={sharedState}\n                switchPanel={e => switchPanel('left', e)}\n              />\n            </>\n          }\n          activePanel={panel}>\n          <Header title=\"User list\" active={autoOpen} />\n          <UserList\n            users={users}\n            sharedState={sharedState}\n            switchPanel={e => switchPanel('right', e)}\n          />\n        </PanelSwitcher>\n      </Popup>\n    </main>\n  );\n\n  function switchPanel (panelName, e) {\n    e.preventDefault();\n    setPanel(panelName);\n    setActiveUser({\n      id: e.target.dataset.userid,\n      index: e.target.dataset.index\n    });\n    return panel;\n  }\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}