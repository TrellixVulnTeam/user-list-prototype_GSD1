{"ast":null,"code":"var _jsxFileName = \"/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/components/TextInput/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { prefix } from '../../globals';\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TextInput(_ref) {\n  _s();\n\n  let {\n    validate,\n    id,\n    label,\n    className,\n    onChange,\n    value = '',\n    ...props\n  } = _ref;\n  const [valueState, setValueState] = useState(value);\n  useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames(`${prefix}-text-input__group`, className, validate),\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: `${prefix}-text-input__label`,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${prefix}-text-input__group`,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: id,\n        value: valueState,\n        onChange: e => {\n          handleChange(e);\n\n          if (typeof onChange === 'function') {\n            onChange(e);\n          }\n        },\n        className: classnames(`${prefix}-text-input`, classnames),\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n\n  function handleChange(e) {\n    setValueState(e.target.value);\n  }\n}\n\n_s(TextInput, \"qKI9PGerOWGVp8a5ASxUYkTIJXk=\");\n\n_c = TextInput;\nexport default TextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"sources":["/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/components/TextInput/index.js"],"names":["useEffect","useState","prefix","classnames","TextInput","validate","id","label","className","onChange","value","props","valueState","setValueState","e","handleChange","target"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,SAASC,SAAT,OAAsF;AAAA;;AAAA,MAAlE;AAACC,IAAAA,QAAD;AAAWC,IAAAA,EAAX;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,SAAtB;AAAiCC,IAAAA,QAAjC;AAA2CC,IAAAA,KAAK,GAAG,EAAnD;AAAuD,OAAGC;AAA1D,GAAkE;AAEpF,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAACS,KAAD,CAA5C;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,aAAa,CAACH,KAAD,CAAb;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEP,UAAU,CAAE,GAAED,MAAO,oBAAX,EAAgCM,SAAhC,EAA2CH,QAA3C,CAA1B;AAAA,eACGE,KAAK,iBAAI;AAAO,MAAA,OAAO,EAAED,EAAhB;AACR,MAAA,SAAS,EAAG,GAAEJ,MAAO,oBADb;AAAA,gBAEPK;AAFO;AAAA;AAAA;AAAA;AAAA,YADZ,eAKE;AAAK,MAAA,SAAS,EAAG,GAAEL,MAAO,oBAA1B;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAEI,EAFN;AAGE,QAAA,KAAK,EAAEM,UAHT;AAIE,QAAA,QAAQ,EAAEE,CAAC,IAAI;AACbC,UAAAA,YAAY,CAACD,CAAD,CAAZ;;AACA,cAAI,OAAOL,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,YAAAA,QAAQ,CAACK,CAAD,CAAR;AACD;AACF,SATH;AAUE,QAAA,SAAS,EAAEX,UAAU,CAAE,GAAED,MAAO,aAAX,EAAyBC,UAAzB,CAVvB;AAAA,WAUiEQ;AAVjE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAuBA,WAASI,YAAT,CAAuBD,CAAvB,EAA0B;AACxBD,IAAAA,aAAa,CAACC,CAAC,CAACE,MAAF,CAASN,KAAV,CAAb;AACD;AACF;;GAlCQN,S;;KAAAA,S;AAoCT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { prefix } from '../../globals';\nimport classnames from 'classnames';\n\nfunction TextInput ({validate, id, label, className, onChange, value = '', ...props}) {\n\n  const [valueState, setValueState] = useState(value);\n\n  useEffect(() => {\n    setValueState(value);\n  }, [value]);\n\n  return (\n    <div className={classnames(`${prefix}-text-input__group`, className, validate)}>\n      {label && <label htmlFor={id}\n        className={`${prefix}-text-input__label`}>\n        {label}\n      </label>}\n      <div className={`${prefix}-text-input__group`}>\n        <input\n          type=\"text\"\n          id={id}\n          value={valueState}\n          onChange={e => {\n            handleChange(e);\n            if (typeof onChange === 'function') {\n              onChange(e);\n            }\n          }}\n          className={classnames(`${prefix}-text-input`, classnames)} {...props}\n        />\n      </div>\n    </div>\n  );\n\n  function handleChange (e) {\n    setValueState(e.target.value);\n  }\n}\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}