{"ast":null,"code":"import _objectSpread from\"/Users/jamesdow/Documents/projects/interview-challenges/lifeway/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/jamesdow/Documents/projects/interview-challenges/lifeway/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"/Users/jamesdow/Documents/projects/interview-challenges/lifeway/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"validate\",\"id\",\"label\",\"className\",\"onChange\",\"value\"];import{useEffect,useState}from'react';import{prefix}from'../../globals';import classnames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TextInput(_ref){var validate=_ref.validate,id=_ref.id,label=_ref.label,className=_ref.className,_onChange=_ref.onChange,_ref$value=_ref.value,value=_ref$value===void 0?'':_ref$value,props=_objectWithoutProperties(_ref,_excluded);var _useState=useState(value),_useState2=_slicedToArray(_useState,2),valueState=_useState2[0],setValueState=_useState2[1];useEffect(function(){setValueState(value);},[value]);return/*#__PURE__*/_jsxs(\"div\",{className:classnames(\"\".concat(prefix,\"-text-input__group\"),className),children:[label&&/*#__PURE__*/_jsx(\"label\",{htmlFor:id,className:\"\".concat(prefix,\"-text-input__label\"),children:label}),/*#__PURE__*/_jsx(\"div\",{className:classnames(\"\".concat(prefix,\"-text-input__wrapper\"),validate),children:/*#__PURE__*/_jsx(\"input\",_objectSpread({type:\"text\",id:id,value:valueState,onChange:function onChange(e){handleChange(e);if(typeof _onChange==='function'){_onChange(e);}},className:classnames(\"\".concat(prefix,\"-text-input\"),classnames)},props))})]});function handleChange(e){setValueState(e.target.value);}}export default TextInput;","map":{"version":3,"sources":["/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/components/TextInput/index.js"],"names":["useEffect","useState","prefix","classnames","TextInput","validate","id","label","className","onChange","value","props","valueState","setValueState","e","handleChange","target"],"mappings":"yhBAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,MAAT,KAAuB,eAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,C,wFAEA,QAASC,CAAAA,SAAT,MAAsF,IAAjEC,CAAAA,QAAiE,MAAjEA,QAAiE,CAAvDC,EAAuD,MAAvDA,EAAuD,CAAnDC,KAAmD,MAAnDA,KAAmD,CAA5CC,SAA4C,MAA5CA,SAA4C,CAAjCC,SAAiC,MAAjCA,QAAiC,iBAAvBC,KAAuB,CAAvBA,KAAuB,qBAAf,EAAe,YAARC,KAAQ,0CAEpF,cAAoCV,QAAQ,CAACS,KAAD,CAA5C,wCAAOE,UAAP,eAAmBC,aAAnB,eAEAb,SAAS,CAAC,UAAM,CACda,aAAa,CAACH,KAAD,CAAb,CACD,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAIA,mBACE,aAAK,SAAS,CAAEP,UAAU,WAAID,MAAJ,uBAAgCM,SAAhC,CAA1B,WACGD,KAAK,eAAI,cAAO,OAAO,CAAED,EAAhB,CACR,SAAS,WAAKJ,MAAL,sBADD,UAEPK,KAFO,EADZ,cAKE,YAAK,SAAS,CAAEJ,UAAU,WAAID,MAAJ,yBAAkCG,QAAlC,CAA1B,uBACE,4BACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAEC,EAFN,CAGE,KAAK,CAAEM,UAHT,CAIE,QAAQ,CAAE,kBAAAE,CAAC,CAAI,CACbC,YAAY,CAACD,CAAD,CAAZ,CACA,GAAI,MAAOL,CAAAA,SAAP,GAAoB,UAAxB,CAAoC,CAClCA,SAAQ,CAACK,CAAD,CAAR,CACD,CACF,CATH,CAUE,SAAS,CAAEX,UAAU,WAAID,MAAJ,gBAAyBC,UAAzB,CAVvB,EAUiEQ,KAVjE,EADF,EALF,GADF,CAuBA,QAASI,CAAAA,YAAT,CAAuBD,CAAvB,CAA0B,CACxBD,aAAa,CAACC,CAAC,CAACE,MAAF,CAASN,KAAV,CAAb,CACD,CACF,CAED,cAAeN,CAAAA,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { prefix } from '../../globals';\nimport classnames from 'classnames';\n\nfunction TextInput ({validate, id, label, className, onChange, value = '', ...props}) {\n\n  const [valueState, setValueState] = useState(value);\n\n  useEffect(() => {\n    setValueState(value);\n  }, [value]);\n\n  return (\n    <div className={classnames(`${prefix}-text-input__group`, className)}>\n      {label && <label htmlFor={id}\n        className={`${prefix}-text-input__label`}>\n        {label}\n      </label>}\n      <div className={classnames(`${prefix}-text-input__wrapper`, validate)}>\n        <input\n          type=\"text\"\n          id={id}\n          value={valueState}\n          onChange={e => {\n            handleChange(e);\n            if (typeof onChange === 'function') {\n              onChange(e);\n            }\n          }}\n          className={classnames(`${prefix}-text-input`, classnames)} {...props}\n        />\n      </div>\n    </div>\n  );\n\n  function handleChange (e) {\n    setValueState(e.target.value);\n  }\n}\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}