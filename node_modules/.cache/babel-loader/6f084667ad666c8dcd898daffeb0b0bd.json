{"ast":null,"code":"var _jsxFileName = \"/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/components/PanelSwitcher/index.js\";\nimport { prefix } from '../../globals';\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PanelSwitcher(_ref) {\n  let {\n    children,\n    aside,\n    activePanel = 'left'\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames(`${prefix}-panel-switcher`, `${prefix}-panel-switcher--${activePanel}`),\n    onKeyDown: trapFocus,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${prefix}-panel-switcher__panel`,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${prefix}-panel-switcher__panel`,\n      children: aside\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n\n  function trapFocus(e) {\n    console.log(e);\n    const isTabPressed = e.key === 'Tab' || e.keyCode === 9; // const isShiftPressed = e.key === 'Tab' || e.keyCode === 9;\n\n    const current = e.target;\n    let scope = e.target;\n\n    if (!isTabPressed) {\n      return;\n    }\n\n    while (!scope.classList.contains(`${prefix}-panel-switcher__panel`)) {\n      scope = scope.parentNode;\n    }\n\n    const focusable = scope.querySelectorAll('input, button');\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    if (current === last) {\n      e.preventDefault();\n      console.log('focus on', first);\n      first.focus();\n    }\n  }\n}\n\n_c = PanelSwitcher;\nexport default PanelSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"PanelSwitcher\");","map":{"version":3,"sources":["/Users/jamesdow/Documents/projects/interview-challenges/lifeway/src/frontend/components/PanelSwitcher/index.js"],"names":["prefix","classnames","PanelSwitcher","children","aside","activePanel","trapFocus","e","console","log","isTabPressed","key","keyCode","current","target","scope","classList","contains","parentNode","focusable","querySelectorAll","first","last","length","preventDefault","focus"],"mappings":";AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,SAASC,aAAT,OAAmE;AAAA,MAA3C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,WAAW,GAAG;AAAjC,GAA2C;AAEjE,sBACE;AAAK,IAAA,SAAS,EAAEJ,UAAU,CAAE,GAAED,MAAO,iBAAX,EAA8B,GAAEA,MAAO,oBAAmBK,WAAY,EAAtE,CAA1B;AAAoG,IAAA,SAAS,EAAEC,SAA/G;AAAA,4BACE;AAAK,MAAA,SAAS,EAAG,GAAEN,MAAO,wBAA1B;AAAA,gBACGG;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAG,GAAEH,MAAO,wBAA1B;AAAA,gBACGI;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAWA,WAASE,SAAT,CAAoBC,CAApB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMG,YAAY,GAAGH,CAAC,CAACI,GAAF,KAAU,KAAV,IAAmBJ,CAAC,CAACK,OAAF,KAAc,CAAtD,CAFqB,CAGrB;;AACA,UAAMC,OAAO,GAAGN,CAAC,CAACO,MAAlB;AACA,QAAIC,KAAK,GAAGR,CAAC,CAACO,MAAd;;AAEA,QAAI,CAACJ,YAAL,EAAmB;AACjB;AACD;;AAED,WAAO,CAACK,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAA0B,GAAEjB,MAAO,wBAAnC,CAAR,EAAqE;AACnEe,MAAAA,KAAK,GAAGA,KAAK,CAACG,UAAd;AACD;;AAED,UAAMC,SAAS,GAAGJ,KAAK,CAACK,gBAAN,CAAuB,eAAvB,CAAlB;AACA,UAAMC,KAAK,GAAGF,SAAS,CAAC,CAAD,CAAvB;AACA,UAAMG,IAAI,GAAGH,SAAS,CAACA,SAAS,CAACI,MAAV,GAAmB,CAApB,CAAtB;;AAEA,QAAIV,OAAO,KAAKS,IAAhB,EAAsB;AACpBf,MAAAA,CAAC,CAACiB,cAAF;AAEAhB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBY,KAAxB;AACAA,MAAAA,KAAK,CAACI,KAAN;AACD;AACF;AACF;;KAvCQvB,a;AAyCT,eAAeA,aAAf","sourcesContent":["import { prefix } from '../../globals';\nimport classnames from 'classnames';\n\nfunction PanelSwitcher ({ children, aside, activePanel = 'left' }) {\n\n  return (\n    <div className={classnames(`${prefix}-panel-switcher`, `${prefix}-panel-switcher--${activePanel}`)} onKeyDown={trapFocus}>\n      <div className={`${prefix}-panel-switcher__panel`}>\n        {children}\n      </div>\n      <div className={`${prefix}-panel-switcher__panel`}>\n        {aside}\n      </div>\n    </div>\n  );\n\n  function trapFocus (e) {\n    console.log(e);\n    const isTabPressed = e.key === 'Tab' || e.keyCode === 9;\n    // const isShiftPressed = e.key === 'Tab' || e.keyCode === 9;\n    const current = e.target;\n    let scope = e.target;\n\n    if (!isTabPressed) {\n      return;\n    }\n\n    while (!scope.classList.contains(`${prefix}-panel-switcher__panel`)) {\n      scope = scope.parentNode;\n    }\n\n    const focusable = scope.querySelectorAll('input, button');\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    if (current === last) {\n      e.preventDefault();\n\n      console.log('focus on', first);\n      first.focus();\n    }\n  }\n}\n\nexport default PanelSwitcher;\n"]},"metadata":{},"sourceType":"module"}